{"ast":null,"code":"var _jsxFileName = \"/Users/chinmoybora/Desktop/TransNet/TransNET-frontend/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  messages\n}) => {\n  _s();\n  const [hasMessages, setHasMessages] = useState(false);\n  const chatEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n    setHasMessages(messages.length > 0); // Check if messages exist\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!hasMessages &&\n    /*#__PURE__*/\n    // Conditionally render the header based on the presence of messages\n    _jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"You received soething today?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"white-text\",\n          children: \"Let's check \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"iYO4rZAcDQT83Y81VWCyS0ttwL8=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ChatBox","messages","_s","hasMessages","setHasMessages","chatEndRef","scrollToBottom","_chatEndRef$current","current","scrollIntoView","behavior","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","sender","text","ref","_c","$RefreshReg$"],"sources":["/Users/chinmoybora/Desktop/TransNet/TransNET-frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst ChatBox = ({ messages }) => {\n  const [hasMessages, setHasMessages] = useState(false);\n  const chatEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n    setHasMessages(messages.length > 0); // Check if messages exist\n  }, [messages]);\n\n  return (\n    <div>\n      {!hasMessages && ( // Conditionally render the header based on the presence of messages\n        <div className='Header'>\n        <h1>You received soething today?<br/><span className=\"white-text\">Let's check </span></h1>\n         \n          \n        </div>\n      )}\n      <div className=\"chat-box\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMQ,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IAC3B,CAAAA,mBAAA,GAAAF,UAAU,CAACG,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdW,cAAc,CAAC,CAAC;IAChBF,cAAc,CAACH,QAAQ,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAAa,QAAA,GACG,CAACT,WAAW;IAAA;IAAM;IACjBJ,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACvBb,OAAA;QAAAa,QAAA,GAAI,8BAA4B,eAAAb,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAAAlB,OAAA;UAAMc,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrF,CACN,eACDlB,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAD,QAAA,GACtBX,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BrB,OAAA;QAAiBc,SAAS,EAAE,WAAWM,OAAO,CAACE,MAAM,EAAG;QAAAT,QAAA,EACrDO,OAAO,CAACG;MAAI,GADLF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,eACFlB,OAAA;QAAKwB,GAAG,EAAElB;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAhCIF,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}